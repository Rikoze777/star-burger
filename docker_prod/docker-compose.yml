version: '3.9'

services:

  database:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    env_file:
      - ../.env

  backend:
    container_name: backend
    build:
      context: ../.
      dockerfile: Dockerfile.backend
    ports:
      - '8080:8080'
    volumes:
      - ../bundles:/burger/bundles/
      - ../media:/burger/media/
      - ../staticfiles:/burger/staticfiles/
    env_file:
      - ../.env
    command: bash -c 'python manage.py collectstatic --noinput && gunicorn -b 0.0.0.0:8000 star_burger.wsgi:burgerlication'
    depends_on:
      database:
        condition: service_started
      frontend:
        condition: service_completed_successfully
    restart: unless-stopped
  
  frontend:
    container_name: frontend
    build:
      context: ../.
      dockerfile: Dockerfile.frontend
    volumes:
      - ../bundles:/burger/bundles

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ..docker_prod/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
volumes:
  postgres: